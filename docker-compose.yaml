name: infectionprotection

services:
  app:
    image: NLCaceres/infection_protection_backend_host
    pull_policy: never
    container_name: infection_protection_app
    build:
      dockerfile: Dockerfile.runner
    ports:
      - "127.0.0.1:8080:8080"
    env_file:
      - ./src/main/resources/.env
    depends_on: # ?: This short form equates to `restart: false, condition: service_started, required: true`
      - mongodb
  mongodb:
    image: mongo:7.0.12-jammy
    container_name: mongodb
    ports: # ?: Port value before the colon is available to the HOST; the Port value after is the SERVICES'
      - "127.0.0.1:27017:27017"
    volumes: # ?: Similar to "PORT:PORT", I SEE mongodb-data (as the host), the services store data in the container "/data"
      - mongodb-data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo-express
    restart: "no"
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH=false
      # - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongo:27017/
volumes: # ?: Volumes are created when docker compose is run IF they aren't already created
  mongodb-data:
